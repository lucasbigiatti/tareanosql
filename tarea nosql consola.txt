Problemas propuestos (1.1)

1. Insertar 2 documentos en la colección clientes con '_id' no repetidos
2. Intentar insertar otro documento con clave repetida.
3. Mostrar todos los documentos de la colección libros.


1) db.clientes.insertMany(
[
 {
 id:5
 },
 {
 id:6
 }
]
)


2) db.clientes.insertOne(
 {
 id: 5
}
)

3) db.libros.find()

Problemas propuestos (1.2)

1. Crear una base de datos llamada "blog".
2. Agregar una colección llamada "posts" e insertar 1 documento con
una estructura a su elección.
3. Mostrar todas las bases de datos actuales.
4. Eliminar la colección "posts"
5. Eliminar la base de datos "blog" y mostrar las bases de datos
existentes.



1) use blog
2)db.post.insertOne(
{
codigo: 1
nombre: juanignacio
}
)
3) show databases
4)db.posts.deleteMany({})
5)db.dropDatabase()
  show dbs

Problemas propuestos (1.3)

2. Imprimir todos los documentos de la colección 'articulos'.
3. Imprimir todos los documentos de la colección 'articulos' que no son
impresoras.
4. Imprimir todos los artículos que pertenecen al rubro de 'mouse'.
5. Imprimir todos los artículos con un precio mayor o igual a 5000.
6. Imprimir todas las impresoras que tienen un precio mayor o igual a
3500.
7. Imprimir todos los artículos cuyo stock se encuentra comprendido
entre 0 y 4

2)db.articulos.find()
3) db.articulos.find( { rubro: { $nin : ['impresora'] } })
4) db.articulos.find( { rubro: { $in : ['mouse'] } })
5) db.articulos.find( { precio: { $gte : 5000 }})
6) db.articulos.find( { $and: [ {rubro: { $in : ['impresora'] } }, { precio: { $gte : 3500 } } ] } )
7) db.articulos.find({ stock: { $gte: 0,$lte: 4}})




